/*
 * 0x API
 *
 * These are the API references for the beta version of 0x API v2. If you are looking for API v1 references, [see here](/0x-swap-api/api-references/overview).
 *
 * The version of the OpenAPI document: next
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SwapPermit2GetPrice200ResponseAnyOfIssuesAllowance : Details of allowances that the `taker` must set for in order to execute the swap successfully. Null if no allowane is required
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SwapPermit2GetPrice200ResponseAnyOfIssuesAllowance {
    /// The `taker`'s current allowance of the `spender`
    #[serde(rename = "actual")]
    pub actual: Box<serde_json::Value>,
    /// The address to set the allowance on
    #[serde(rename = "spender")]
    pub spender: String,
}

impl SwapPermit2GetPrice200ResponseAnyOfIssuesAllowance {
    /// Details of allowances that the `taker` must set for in order to execute the swap successfully. Null if no allowane is required
    pub fn new(actual: serde_json::Value, spender: String) -> SwapPermit2GetPrice200ResponseAnyOfIssuesAllowance {
        SwapPermit2GetPrice200ResponseAnyOfIssuesAllowance {
            actual: Box::new(actual),
            spender,
        }
    }
}

