/*
 * 0x API
 *
 * These are the API references for the beta version of 0x API v2. If you are looking for API v1 references, [see here](/0x-swap-api/api-references/overview).
 *
 * The version of the OpenAPI document: next
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GaslessSubmitRequestTradeEip712MessageSlippageAndActions {
    #[serde(rename = "recipient")]
    pub recipient: String,
    #[serde(rename = "buyToken")]
    pub buy_token: String,
    #[serde(rename = "minAmountOut", deserialize_with = "Option::deserialize")]
    pub min_amount_out: Option<Box<models::GaslessSubmitRequestTradeEip712MessagePermittedAmount>>,
    #[serde(rename = "actions")]
    pub actions: Vec<String>,
}

impl GaslessSubmitRequestTradeEip712MessageSlippageAndActions {
    pub fn new(recipient: String, buy_token: String, min_amount_out: Option<models::GaslessSubmitRequestTradeEip712MessagePermittedAmount>, actions: Vec<String>) -> GaslessSubmitRequestTradeEip712MessageSlippageAndActions {
        GaslessSubmitRequestTradeEip712MessageSlippageAndActions {
            recipient,
            buy_token,
            min_amount_out: if let Some(x) = min_amount_out {Some(Box::new(x))} else {None},
            actions,
        }
    }
}

