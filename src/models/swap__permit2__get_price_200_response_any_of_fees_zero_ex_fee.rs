/*
 * 0x API
 *
 * These are the API references for the beta version of 0x API v2. If you are looking for API v1 references, [see here](/0x-swap-api/api-references/overview).
 *
 * The version of the OpenAPI document: next
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SwapPermit2GetPrice200ResponseAnyOfFeesZeroExFee : The fee charged by 0x for the trade.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SwapPermit2GetPrice200ResponseAnyOfFeesZeroExFee {
    #[serde(rename = "amount")]
    pub amount: Box<serde_json::Value>,
    #[serde(rename = "token")]
    pub token: String,
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl SwapPermit2GetPrice200ResponseAnyOfFeesZeroExFee {
    /// The fee charged by 0x for the trade.
    pub fn new(amount: serde_json::Value, token: String, r#type: Type) -> SwapPermit2GetPrice200ResponseAnyOfFeesZeroExFee {
        SwapPermit2GetPrice200ResponseAnyOfFeesZeroExFee {
            amount: Box::new(amount),
            token,
            r#type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "volume")]
    Volume,
    #[serde(rename = "gas")]
    Gas,
}

impl Default for Type {
    fn default() -> Type {
        Self::Volume
    }
}

