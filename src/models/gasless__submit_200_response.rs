/*
 * 0x API
 *
 * These are the API references for the beta version of 0x API v2. If you are looking for API v1 references, [see here](/0x-swap-api/api-references/overview).
 *
 * The version of the OpenAPI document: next
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GaslessSubmit200Response {
    /// The hash for the trade according to [EIP-712](https://eips.ethereum.org/EIPS/eip-712)
    #[serde(rename = "tradeHash")]
    pub trade_hash: String,
    /// The transaction type determined by the trade route. This is currently just `settler_metatransaction` and could expand to more types in the future
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The unique ZeroEx identifier of the request
    #[serde(rename = "zid")]
    pub zid: String,
}

impl GaslessSubmit200Response {
    pub fn new(trade_hash: String, r#type: Type, zid: String) -> GaslessSubmit200Response {
        GaslessSubmit200Response {
            trade_hash,
            r#type,
            zid,
        }
    }
}
/// The transaction type determined by the trade route. This is currently just `settler_metatransaction` and could expand to more types in the future
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "settler_metatransaction")]
    SettlerMetatransaction,
}

impl Default for Type {
    fn default() -> Type {
        Self::SettlerMetatransaction
    }
}

