/*
 * 0x API
 *
 * These are the API references for the beta version of 0x API v2. If you are looking for API v1 references, [see here](/0x-swap-api/api-references/overview).
 *
 * The version of the OpenAPI document: next
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GaslessSubmitRequestApproval : The gasless approval object from the quote endpoint including its signature
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GaslessSubmitRequestApproval {
    /// The `approval.type` from the quote endpoint
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "eip712")]
    pub eip712: Box<models::GaslessSubmitRequestApprovalEip712>,
    #[serde(rename = "signature")]
    pub signature: Box<models::GaslessSubmitRequestApprovalSignature>,
}

impl GaslessSubmitRequestApproval {
    /// The gasless approval object from the quote endpoint including its signature
    pub fn new(r#type: Type, eip712: models::GaslessSubmitRequestApprovalEip712, signature: models::GaslessSubmitRequestApprovalSignature) -> GaslessSubmitRequestApproval {
        GaslessSubmitRequestApproval {
            r#type,
            eip712: Box::new(eip712),
            signature: Box::new(signature),
        }
    }
}
/// The `approval.type` from the quote endpoint
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "executeMetaTransaction::approve")]
    ExecuteMetaTransactionColonColonApprove,
    #[serde(rename = "permit")]
    Permit,
    #[serde(rename = "daiPermit")]
    DaiPermit,
}

impl Default for Type {
    fn default() -> Type {
        Self::ExecuteMetaTransactionColonColonApprove
    }
}

